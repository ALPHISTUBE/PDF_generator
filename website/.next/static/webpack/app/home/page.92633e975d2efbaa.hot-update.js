"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/home/page",{

/***/ "(app-pages-browser)/./src/components/home/api.jsx":
/*!*************************************!*\
  !*** ./src/components/home/api.jsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   saveTransaction: () => (/* binding */ saveTransaction)\n/* harmony export */ });\nconst base64toBlob = (base64, mime)=>{\n    const byteCharacters = atob(base64);\n    const byteNumbers = new Array(byteCharacters.length);\n    for(let i = 0; i < byteCharacters.length; i++){\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    return new Blob([\n        byteArray\n    ], {\n        type: mime\n    });\n};\nconst saveTransaction = async (transactions)=>{\n    try {\n        const response = await fetch('http://localhost:4000/generate-pdf/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(transactions)\n        });\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        const pdfBase64 = data.pdf_base64;\n        const pdfBlob = base64toBlob(pdfBase64, 'application/pdf');\n        const pdfUrl = URL.createObjectURL(pdfBlob);\n        return pdfUrl;\n    } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2hvbWUvYXBpLmpzeCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsZUFBZSxDQUFDQyxRQUFRQztJQUMxQixNQUFNQyxpQkFBaUJDLEtBQUtIO0lBQzVCLE1BQU1JLGNBQWMsSUFBSUMsTUFBTUgsZUFBZUksTUFBTTtJQUNuRCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUwsZUFBZUksTUFBTSxFQUFFQyxJQUFLO1FBQzVDSCxXQUFXLENBQUNHLEVBQUUsR0FBR0wsZUFBZU0sVUFBVSxDQUFDRDtJQUMvQztJQUNBLE1BQU1FLFlBQVksSUFBSUMsV0FBV047SUFDakMsT0FBTyxJQUFJTyxLQUFLO1FBQUNGO0tBQVUsRUFBRTtRQUFFRyxNQUFNWDtJQUFLO0FBQzlDO0FBRU8sTUFBTVksa0JBQWtCLE9BQU9DO0lBQ2xDLElBQUk7UUFDQSxNQUFNQyxXQUFXLE1BQU1DLE1BQU0sdUNBQXVDO1lBQ2hFQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ0wsZ0JBQWdCO1lBQ3BCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ1A7UUFDekI7UUFDQSxJQUFJLENBQUNDLFNBQVNPLEVBQUUsRUFBRTtZQUNkLE1BQU0sSUFBSUMsTUFBTTtRQUNwQjtRQUNBLE1BQU1DLE9BQU8sTUFBTVQsU0FBU1UsSUFBSTtRQUNoQyxNQUFNQyxZQUFZRixLQUFLRyxVQUFVO1FBQ2pDLE1BQU1DLFVBQVU3QixhQUFhMkIsV0FBVztRQUN4QyxNQUFNRyxTQUFTQyxJQUFJQyxlQUFlLENBQUNIO1FBQ25DLE9BQU9DO0lBQ1gsRUFBRSxPQUFPRyxPQUFPO1FBQ1pDLFFBQVFELEtBQUssQ0FBQyxpREFBaURBO0lBQ25FO0FBQ0osRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2hvbWUvYXBpLmpzeD8wYzM1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJhc2U2NHRvQmxvYiA9IChiYXNlNjQsIG1pbWUpID0+IHtcbiAgICBjb25zdCBieXRlQ2hhcmFjdGVycyA9IGF0b2IoYmFzZTY0KTtcbiAgICBjb25zdCBieXRlTnVtYmVycyA9IG5ldyBBcnJheShieXRlQ2hhcmFjdGVycy5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnl0ZUNoYXJhY3RlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYnl0ZU51bWJlcnNbaV0gPSBieXRlQ2hhcmFjdGVycy5jaGFyQ29kZUF0KGkpO1xuICAgIH1cbiAgICBjb25zdCBieXRlQXJyYXkgPSBuZXcgVWludDhBcnJheShieXRlTnVtYmVycyk7XG4gICAgcmV0dXJuIG5ldyBCbG9iKFtieXRlQXJyYXldLCB7IHR5cGU6IG1pbWUgfSk7XG59O1xuXG5leHBvcnQgY29uc3Qgc2F2ZVRyYW5zYWN0aW9uID0gYXN5bmMgKHRyYW5zYWN0aW9ucykgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9nZW5lcmF0ZS1wZGYvJywge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHRyYW5zYWN0aW9ucylcbiAgICAgICAgfSlcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOZXR3b3JrIHJlc3BvbnNlIHdhcyBub3Qgb2snKVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIGNvbnN0IHBkZkJhc2U2NCA9IGRhdGEucGRmX2Jhc2U2NDtcbiAgICAgICAgY29uc3QgcGRmQmxvYiA9IGJhc2U2NHRvQmxvYihwZGZCYXNlNjQsICdhcHBsaWNhdGlvbi9wZGYnKTtcbiAgICAgICAgY29uc3QgcGRmVXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChwZGZCbG9iKTtcbiAgICAgICAgcmV0dXJuIHBkZlVybDtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggdGhlIGZldGNoIG9wZXJhdGlvbjonLCBlcnJvcilcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiYmFzZTY0dG9CbG9iIiwiYmFzZTY0IiwibWltZSIsImJ5dGVDaGFyYWN0ZXJzIiwiYXRvYiIsImJ5dGVOdW1iZXJzIiwiQXJyYXkiLCJsZW5ndGgiLCJpIiwiY2hhckNvZGVBdCIsImJ5dGVBcnJheSIsIlVpbnQ4QXJyYXkiLCJCbG9iIiwidHlwZSIsInNhdmVUcmFuc2FjdGlvbiIsInRyYW5zYWN0aW9ucyIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsIkVycm9yIiwiZGF0YSIsImpzb24iLCJwZGZCYXNlNjQiLCJwZGZfYmFzZTY0IiwicGRmQmxvYiIsInBkZlVybCIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImVycm9yIiwiY29uc29sZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/home/api.jsx\n"));

/***/ })

});